name: Deploy master to server

env:
  MASTER_DIR: app

on:
  push:
    branches: ["release"]
  pull_request:
    branches: ["release"]

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if Docker is installed
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Docker is not installed. Installing..."
              sudo curl -fsSL https://get.docker.com | sh
            else
              echo "Docker is already installed."
            fi

  deploy:
    runs-on: ubuntu-latest
    needs: check

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            if [ -d "${{ env.MASTER_DIR }}/.git" ]; then
              echo "Found repository. Pulling..."
              cd ${{ env.MASTER_DIR }}
              git pull origin release || exit 1
              echo "Repository is updated."
            else
              echo "Repository is not pulled. Pulling..."
              git clone ${{ github.repositoryUrl }} -b release ${{ env.MASTER_DIR }} || exit 1
              echo "Repository is pulled."
            fi

      - name: Setup .env
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.MASTER_DIR }}
            rm -f .env && touch .env
            echo echo "PG_USER=${{ secrets.PG_USER }}" >> .env
            echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> .env
            echo "PGADMIN_EMAIL=${{ secrets.PGADMIN_EMAIL }}" >> .env
            echo "PGADMIN_PASSWORD=${{ secrets.PGADMIN_PASSWORD }}" >> .env

      - name: Run Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ env.MASTER_DIR }}
            if [ -f "docker-compose.yml" ]; then
              if [ ! -f ".env" ]; then
                touch .env
              fi
              sudo docker compose down --remove-orphans
              sudo docker compose up -d --build
            fi
